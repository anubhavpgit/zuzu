<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Anubhav's Blog]]></title>
        <description><![CDATA[Anubhav's Blog]]></description>
        <link>https://anubhavp.dev/blog</link>
        <generator>RSS for Node</generator>
        <lastBuildDate>Mon, 08 May 2023 10:01:00 GMT</lastBuildDate>
        <atom:link href="https://anubhavp.dev/blog/feed.xml" rel="self" type="application/rss+xml"/>
        <author><![CDATA[Anubhab Patnaik]]></author>
        <atom:link href="https://anubhavp.dev/blog/feed.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[Shitpost.IN]]></title>
            <link>https://anubhavp.dev/blog/cheatsheet.html</link>
            <guid isPermaLink="true">https://anubhavp.dev/blog/cheatsheet.html</guid>
            <dc:creator><![CDATA[Anubhab Patnaik]]></dc:creator>
            <pubDate>Sat, 28 May 2022 18:30:00 GMT</pubDate>
            <content:encoded>
    &lt;div class=&quot;main&quot;&gt;
        &lt;div class=&quot;container nav&quot;&gt;
            &lt;div class=&quot;row flex&quot;&gt;
                &lt;div class=&quot;col-md-12&quot;&gt;
                    &lt;div&gt;
                        &lt;span&gt;
                            &lt;a class=&quot;navanchor&quot; href=&quot;./index.html&quot;&gt;SHITPOST.IN&lt;/a&gt;
                        &lt;/span&gt;
                        &lt;span&gt;
                            &lt;a class=&quot;navanchor&quot; href=&quot;https://anubhavp.dev&quot;&gt;Profile&lt;/a&gt;
                        &lt;/span&gt;


                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;a class=&quot;navanchor&quot; href=&quot;./search.html&quot;&gt;Search&lt;/a&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;h3 style=&quot;font-size: 48px; padding-left: 10px;&quot;&gt;
                SHITPOST.IN
            &lt;/h3&gt;
        &lt;/div&gt;
        &lt;div class=&quot;md&quot;&gt;
            &lt;div class=&quot;head&quot;&gt;
                &lt;h1&gt;
                    CheatSheet- MD
                &lt;/h1&gt;
                &lt;p class=&quot;dt&quot;&gt;
                    May 29, 2022
                &lt;/p&gt;
            &lt;/div&gt;
            &lt;div&gt;
                &lt;p class=&quot;auth&quot;&gt;Anubhab Patnaik&lt;/p&gt;
                &lt;p class=&quot;auth&quot;&gt;&lt;/p&gt;&lt;h1 id=&quot;navigation&quot; tabindex=&quot;-1&quot;&gt;Navigation&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;Tech stuf&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;First item&lt;/li&gt;
&lt;li&gt;Second item&lt;/li&gt;
&lt;li&gt;Third item&lt;/li&gt;
&lt;li&gt;Fourth item&lt;/li&gt;
&lt;/ol&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Navigation&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Tech&lt;/td&gt;
&lt;td&gt;Tech stuff that I have written&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Paragraph&lt;/td&gt;
&lt;td&gt;Text&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;  &lt;span class=&quot;hljs-string&quot;&gt;&quot;firstName&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;John&quot;&lt;/span&gt;,
  &lt;span class=&quot;hljs-string&quot;&gt;&quot;lastName&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-string&quot;&gt;&quot;Smith&quot;&lt;/span&gt;,
  &lt;span class=&quot;hljs-string&quot;&gt;&quot;age&quot;&lt;/span&gt;: &lt;span class=&quot;hljs-number&quot;&gt;25&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&quot;h1-heading-8-&quot; tabindex=&quot;-1&quot;&gt;h1 Heading 8-)&lt;/h1&gt;
&lt;h2 id=&quot;h2-heading&quot; tabindex=&quot;-1&quot;&gt;h2 Heading&lt;/h2&gt;
&lt;h3 id=&quot;h3-heading&quot; tabindex=&quot;-1&quot;&gt;h3 Heading&lt;/h3&gt;
&lt;h4 id=&quot;h4-heading&quot; tabindex=&quot;-1&quot;&gt;h4 Heading&lt;/h4&gt;
&lt;h5 id=&quot;h5-heading&quot; tabindex=&quot;-1&quot;&gt;h5 Heading&lt;/h5&gt;
&lt;h6 id=&quot;h6-heading&quot; tabindex=&quot;-1&quot;&gt;h6 Heading&lt;/h6&gt;
&lt;h2 id=&quot;horizontal-rules&quot; tabindex=&quot;-1&quot;&gt;Horizontal Rules&lt;/h2&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2 id=&quot;typographic-replacements&quot; tabindex=&quot;-1&quot;&gt;Typographic replacements&lt;/h2&gt;
&lt;p&gt;Enable typographer option to see result.&lt;/p&gt;
&lt;p&gt;© © ® ® ™ ™ (p) (P) ±&lt;/p&gt;
&lt;p&gt;test… test… test… test?.. test!..&lt;/p&gt;
&lt;p&gt;!!! ??? ,  – —&lt;/p&gt;
&lt;p&gt;“Smartypants, double quotes” and ‘single quotes’&lt;/p&gt;
&lt;h2 id=&quot;emphasis&quot; tabindex=&quot;-1&quot;&gt;Emphasis&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;This is bold text&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is bold text&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is italic text&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This is italic text&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;s&gt;Strikethrough&lt;/s&gt;&lt;/p&gt;
&lt;h2 id=&quot;blockquotes&quot; tabindex=&quot;-1&quot;&gt;Blockquotes&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Blockquotes can also be nested…&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;…by using additional greater-than signs right next to each other…&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;…or with spaces between arrows.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;lists&quot; tabindex=&quot;-1&quot;&gt;Lists&lt;/h2&gt;
&lt;p&gt;Unordered&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create a list by starting a line with &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;-&lt;/code&gt;, or &lt;code&gt;*&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Sub-lists are made by indenting 2 spaces:
&lt;ul&gt;
&lt;li&gt;Marker character change forces new list start:
&lt;ul&gt;
&lt;li&gt;Ac tristique libero volutpat at&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Facilisis in pretium nisl aliquet&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;Nulla volutpat aliquam velit&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Very easy!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ordered&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Lorem ipsum dolor sit amet&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Consectetur adipiscing elit&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integer molestie lorem at massa&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;You can use sequential numbers…&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;…or keep all the numbers as &lt;code&gt;1.&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Start numbering with offset:&lt;/p&gt;
&lt;ol start=&quot;57&quot;&gt;
&lt;li&gt;foo&lt;/li&gt;
&lt;li&gt;bar&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;code&quot; tabindex=&quot;-1&quot;&gt;Code&lt;/h2&gt;
&lt;p&gt;Inline &lt;code&gt;code&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Indented code&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;// Some comments
line 1 of code
line 2 of code
line 3 of code
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Block code “fences”&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Sample text here...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Syntax highlighting&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;hljs-keyword&quot;&gt;var&lt;/span&gt; foo = &lt;span class=&quot;hljs-keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;hljs-params&quot;&gt;bar&lt;/span&gt;) {
  &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; bar++;
};

&lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-title function_&quot;&gt;foo&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;5&lt;/span&gt;));
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&quot;tables&quot; tabindex=&quot;-1&quot;&gt;Tables&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Option&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;data&lt;/td&gt;
&lt;td&gt;path to data files to supply the data that will be passed into templates.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;engine&lt;/td&gt;
&lt;td&gt;engine to be used for processing templates. Handlebars is the default.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ext&lt;/td&gt;
&lt;td&gt;extension to be used for dest files.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Right aligned columns&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Option&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;data&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;path to data files to supply the data that will be passed into templates.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;engine&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;engine to be used for processing templates. Handlebars is the default.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:right&quot;&gt;ext&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;extension to be used for dest files.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;links&quot; tabindex=&quot;-1&quot;&gt;Links&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://dev.nodeca.com&quot;&gt;link text&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://nodeca.github.io/pica/demo/&quot; title=&quot;title text!&quot;&gt;link with title&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Autoconverted link &lt;a href=&quot;https://github.com/nodeca/pica&quot;&gt;https://github.com/nodeca/pica&lt;/a&gt; (enable linkify to see)&lt;/p&gt;
&lt;h2 id=&quot;images&quot; tabindex=&quot;-1&quot;&gt;Images&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://octodex.github.com/images/minion.png&quot; alt=&quot;Minion&quot;&gt;
&lt;img src=&quot;https://octodex.github.com/images/stormtroopocat.jpg&quot; alt=&quot;Stormtroopocat&quot; title=&quot;The Stormtroopocat&quot;&gt;&lt;/p&gt;
&lt;p&gt;Like links, Images also have a footnote style syntax&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://octodex.github.com/images/dojocat.jpg&quot; alt=&quot;Alt text&quot; title=&quot;The Dojocat&quot;&gt;&lt;/p&gt;
&lt;p&gt;With a reference later in the document defining the URL location:&lt;/p&gt;
&lt;h2 id=&quot;plugins&quot; tabindex=&quot;-1&quot;&gt;Plugins&lt;/h2&gt;
&lt;p&gt;The killer feature of &lt;code&gt;markdown-it&lt;/code&gt; is very effective support of
&lt;a href=&quot;https://www.npmjs.org/browse/keyword/markdown-it-plugin&quot;&gt;syntax plugins&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;emojies&quot; tabindex=&quot;-1&quot;&gt;&lt;a href=&quot;https://github.com/markdown-it/markdown-it-emoji&quot;&gt;Emojies&lt;/a&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Classic markup: :wink: :crush: :cry: :tear: :laughing: :yum:&lt;/p&gt;
&lt;p&gt;Shortcuts (emoticons): :-) :-( 8-) ;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;see &lt;a href=&quot;https://github.com/markdown-it/markdown-it-emoji#change-output&quot;&gt;how to change output&lt;/a&gt; with twemoji.&lt;/p&gt;
&lt;h3 id=&quot;subscript-superscript&quot; tabindex=&quot;-1&quot;&gt;&lt;a href=&quot;https://github.com/markdown-it/markdown-it-sub&quot;&gt;Subscript&lt;/a&gt; / &lt;a href=&quot;https://github.com/markdown-it/markdown-it-sup&quot;&gt;Superscript&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;19^th^&lt;/li&gt;
&lt;li&gt;H~2~O&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;ins&quot; tabindex=&quot;-1&quot;&gt;&lt;a href=&quot;https://github.com/markdown-it/markdown-it-ins&quot;&gt;&amp;lt;ins&amp;gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;++Inserted text++&lt;/p&gt;
&lt;h3 id=&quot;mark&quot; tabindex=&quot;-1&quot;&gt;&lt;a href=&quot;https://github.com/markdown-it/markdown-it-mark&quot;&gt;&amp;lt;mark&amp;gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;==Marked text==&lt;/p&gt;
&lt;h3 id=&quot;footnotes&quot; tabindex=&quot;-1&quot;&gt;&lt;a href=&quot;https://github.com/markdown-it/markdown-it-footnote&quot;&gt;Footnotes&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Footnote 1 link[^first].&lt;/p&gt;
&lt;p&gt;Footnote 2 link[^second].&lt;/p&gt;
&lt;p&gt;Inline footnote^[Text of inline footnote] definition.&lt;/p&gt;
&lt;p&gt;Duplicated footnote reference[^second].&lt;/p&gt;
&lt;p&gt;[^first]: Footnote &lt;strong&gt;can have markup&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;and multiple paragraphs.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;[^second]: Footnote text.&lt;/p&gt;
&lt;h3 id=&quot;definition-lists&quot; tabindex=&quot;-1&quot;&gt;&lt;a href=&quot;https://github.com/markdown-it/markdown-it-deflist&quot;&gt;Definition lists&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Term 1&lt;/p&gt;
&lt;p&gt;:   Definition 1
with lazy continuation.&lt;/p&gt;
&lt;p&gt;Term 2 with &lt;em&gt;inline markup&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;:   Definition 2&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    { some code, part of Definition 2 }

Third paragraph of definition 2.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Compact style:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Term 1
~ Definition 1&lt;/p&gt;
&lt;p&gt;Term 2
~ Definition 2a
~ Definition 2b&lt;/p&gt;
&lt;h3 id=&quot;abbreviations&quot; tabindex=&quot;-1&quot;&gt;&lt;a href=&quot;https://github.com/markdown-it/markdown-it-abbr&quot;&gt;Abbreviations&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This is HTML abbreviation example.&lt;/p&gt;
&lt;p&gt;It converts “HTML”, but keep intact partial entries like “xxxHTMLyyy” and so on.&lt;/p&gt;
&lt;p&gt;*[HTML]: Hyper Text Markup Language&lt;/p&gt;
&lt;h3 id=&quot;custom-containers&quot; tabindex=&quot;-1&quot;&gt;&lt;a href=&quot;https://github.com/markdown-it/markdown-it-container&quot;&gt;Custom containers&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;::: warning
&lt;em&gt;here be dragons&lt;/em&gt;
:::&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div id=&quot;content&quot;&gt;
            &lt;div class=&quot;foot&quot;&gt;
                &lt;div id=&quot;links&quot;&gt;
    
                    &lt;div class=&quot;icons&quot;&gt;
    
                        &lt;a aria-label=&quot;GitHub&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; id=&quot;github&quot; href=&quot;http://github.com/codebotx &quot; class=&quot;icon&quot;&gt;
                            &lt;i class=&quot;bi bi-github&quot;&gt;&lt;/i&gt;
                        &lt;/a&gt;
    
                        &lt;a aria-label=&quot;Instagram&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; id=&quot;instagram&quot; href=&quot;http://instagram.com/anubhavclicks&quot; class=&quot;icon&quot;&gt;
                            &lt;i class=&quot;bi bi-instagram &quot;&gt;&lt;/i&gt;
                        &lt;/a&gt;
    
                        &lt;a aria-label=&quot;Mail&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; id=&quot;mail&quot; href=&quot;mailto:anubhabr50@gmail.com &quot; class=&quot;icon&quot;&gt;
                            &lt;i class=&quot;bi bi-envelope-open-fill &quot;&gt;&lt;/i&gt;
                        &lt;/a&gt;
    
                        &lt;a aria-label=&quot;Linkedin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; id=&quot;linkedin&quot; href=&quot;https://www.linkedin.com/in/anubhabpatnaik0530/ &quot; class=&quot;icon&quot;&gt;
                            &lt;i class=&quot;bi bi-linkedin &quot;&gt;&lt;/i&gt;
                        &lt;/a&gt;
    
                        &lt;a aria-label=&quot;Blog&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; id=&quot;personal-blog&quot; href=&quot;https://anubhavp.dev/blog &quot; class=&quot;icon&quot;&gt;
                            &lt;i class=&quot;bi bi-card-text &quot;&gt;&lt;/i&gt;
                        &lt;/a&gt;
    
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    ©Anubhab Patnaik. Find me here.
                &lt;/div&gt;
            &lt;/div&gt;
    
        &lt;/div&gt;



    &lt;/div&gt;


</content:encoded>
        </item>
        <item>
            <title><![CDATA[Shitpost.IN]]></title>
            <link>https://anubhavp.dev/blog/zuzu.html</link>
            <guid isPermaLink="true">https://anubhavp.dev/blog/zuzu.html</guid>
            <dc:creator><![CDATA[Anubhab Patnaik]]></dc:creator>
            <pubDate>Sat, 28 May 2022 18:30:00 GMT</pubDate>
            <content:encoded>
    &lt;div class=&quot;main&quot;&gt;
        &lt;div class=&quot;container nav&quot;&gt;
            &lt;div class=&quot;row flex&quot;&gt;
                &lt;div class=&quot;col-md-12&quot;&gt;
                    &lt;div&gt;
                        &lt;span&gt;
                            &lt;a class=&quot;navanchor&quot; href=&quot;./index.html&quot;&gt;SHITPOST.IN&lt;/a&gt;
                        &lt;/span&gt;
                        &lt;span&gt;
                            &lt;a class=&quot;navanchor&quot; href=&quot;https://anubhavp.dev&quot;&gt;Profile&lt;/a&gt;
                        &lt;/span&gt;


                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    &lt;a class=&quot;navanchor&quot; href=&quot;./search.html&quot;&gt;Search&lt;/a&gt;
                &lt;/div&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div&gt;
            &lt;h3 style=&quot;font-size: 48px; padding-left: 10px;&quot;&gt;
                SHITPOST.IN
            &lt;/h3&gt;
        &lt;/div&gt;
        &lt;div class=&quot;md&quot;&gt;
            &lt;div class=&quot;head&quot;&gt;
                &lt;h1&gt;
                    zuzu: A Static Site Generator (SSG)
                &lt;/h1&gt;
                &lt;p class=&quot;dt&quot;&gt;
                    May 29, 2022
                &lt;/p&gt;
            &lt;/div&gt;
            &lt;div&gt;
                &lt;p class=&quot;auth&quot;&gt;Anubhab Patnaik&lt;/p&gt;
                &lt;p class=&quot;auth&quot;&gt;&lt;/p&gt;&lt;p&gt;Zuzu is a static site generator that takes in markdown files and render htmls pages. &lt;a href=&quot;https://anubhavp.dev/blog&quot;&gt;This blog&lt;/a&gt;, for example, has been written using this generator. This enables noobs like me to write blogs without having to learn a lot of code! It is a very simple and easy to use generator. All you need to do is to write a markdown file and it will be rendered as a page ;) You can create a new page by creating a new markdown file.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#how-does-it-work&quot;&gt;How Does it work&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-create-a-markdown-file&quot;&gt;Create a markdown file.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-run-the-generator-and-find-your-blog&quot;&gt;Run the generator and find your blog.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#the-static-site-generator&quot;&gt;The Static Site Generator&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-libraries-used&quot;&gt;Libraries Used&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-workflow&quot;&gt;Workflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#3-generator-code&quot;&gt;Generator Code.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;how-does-it-work&quot; tabindex=&quot;-1&quot;&gt;How does it work?&lt;/h2&gt;
&lt;p&gt;Zuzu parses the markdown file using &lt;em&gt;javascript&lt;/em&gt; and renders it as &lt;em&gt;html documents&lt;/em&gt;. It then saves the html files in the &lt;code&gt;public&lt;/code&gt; folder. The public folder, with &lt;code&gt;index.html&lt;/code&gt; file, is the final output of the generator and this can be deployed and hosted in various platforms. This particular blog has been deployed on &lt;a href=&quot;https://anubhavp.dev/blog/&quot;&gt;Github Pages&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;1-create-a-markdown-file&quot; tabindex=&quot;-1&quot;&gt;1. Create a markdown file&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;# This is a title
This is a paragraph
This is another paragraph
This is a list:
* Item 1
* Item 2
* Item 3
This is a code block:
```
print(&quot;Hello World&quot;)
```
This is a table:
| Column 1 | Column 2 | Column 3 |
| -------- | -------- | -------- |
| 1        | 2        | 3        |
| 4        | 5        | 6        |
| 7        | 8        | 9        |
This is a link: [zuzu](https://anubhavp.dev/blog/zuzu.html)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&quot;2-run-the-generator-and-find-your-blog&quot; tabindex=&quot;-1&quot;&gt;2. Run the generator and find your blog&lt;/h3&gt;
&lt;p&gt;Run &lt;code&gt;npm run generate&lt;/code&gt; in the console.
You’ll now see the blog in the public folder! Run the index.html file in your browser to see your blog. You may now deploy your site
to a server.&lt;/p&gt;
&lt;h2 id=&quot;the-static-site-generator&quot; tabindex=&quot;-1&quot;&gt;The Static Site Generator&lt;/h2&gt;
&lt;h3 id=&quot;1-libraries-used&quot; tabindex=&quot;-1&quot;&gt;1. Libraries used&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/markdown-it&quot;&gt;MarkdownIt&lt;/a&gt; &lt;em&gt;Markdown parser done right.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/markdown-it-anchor&quot;&gt;MarkdownItAnchor&lt;/a&gt; &lt;em&gt;Header anchors for markdown-it.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/glob&quot;&gt;Glob&lt;/a&gt; &lt;em&gt;“Globs” are the patterns you type when you do stuff like ls .js on the command line, or put build/ in a .gitignore file.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.npmjs.com/package/gray-matter&quot;&gt;Gray-Matter&lt;/a&gt; &lt;em&gt;Parse front-matter from a string or file.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://npmjs.com/package/mkdirp&quot;&gt;Mkdirp&lt;/a&gt; &lt;em&gt;Create Dirs if they do not exist.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;2-workflow&quot; tabindex=&quot;-1&quot;&gt;2. Workflow&lt;/h3&gt;
&lt;p&gt;This is the code for the generator.js.
The code works in the following way:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;fs.readfile() from fs&lt;/code&gt; reads all the files from the said directory and stores then in &lt;code&gt;filename&lt;/code&gt; using &lt;code&gt;glob&lt;/code&gt;. It is a &lt;code&gt;glob&lt;/code&gt; that matches all the files in the directory. The &lt;code&gt;file system&lt;/code&gt; module allows you to work with the file system on your computer.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;gray-matter&lt;/code&gt; helps extracting front matter from the a string or file.
Converts a string with front-matter, like this:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;    title: Hello
    slug: home
    ---
    &amp;lt;h1&amp;gt;Hello world!&amp;lt;/h1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Into an object like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
content: &apos;&amp;lt;h1&amp;gt;Hello world!&amp;lt;/h1&amp;gt;&apos;,
data: { 
    title: &apos;Hello&apos;, 
    slug: &apos;home&apos; 
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It then extracts the front matter and stores it in &lt;code&gt;data&lt;/code&gt;. It then stores the content in &lt;code&gt;content&lt;/code&gt; and returns the &lt;code&gt;filename&lt;/code&gt; to the &lt;code&gt;main()&lt;/code&gt; function. It then repeats the process for all the files in the directory.&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;
&lt;p&gt;The &lt;code&gt;main()&lt;/code&gt; function then takes in one &lt;code&gt;filename&lt;/code&gt; at a time and then parses it through &lt;code&gt;markdownit( ,{markdownitanchor})&lt;/code&gt;. &lt;code&gt;markdownit&lt;/code&gt; parses the file and converts the markdown content into HTML files. It then creates a &lt;code&gt;html&lt;/code&gt; file and writes the parsed content into it. It then saves the &lt;code&gt;html&lt;/code&gt; file in the &lt;code&gt;public&lt;/code&gt; folder. This process repeats for all the files in the directory.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The converted html files are stored in the specified directories then using &lt;code&gt;mkdirp&lt;/code&gt;. The &lt;code&gt;index.html&lt;/code&gt; file isalready present in the &lt;code&gt;public&lt;/code&gt; folder. &lt;code&gt;mkdirp&lt;/code&gt; creates the directories if they do not exist.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;3-generator-code&quot; tabindex=&quot;-1&quot;&gt;3. Generator Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&quot;language-js&quot;&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; fs &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;fs&apos;&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; glob &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;glob&apos;&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; matter &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;gray-matter&apos;&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; mkdirp &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;mkdirp&apos;&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; path &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;path&apos;&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; hljs &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;highlight.js&apos;&lt;/span&gt;;
&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;hljs-title class_&quot;&gt;MarkdownIt&lt;/span&gt; &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;markdown-it&apos;&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; markdownItAnchor &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;markdown-it-anchor&apos;&lt;/span&gt;
&lt;span class=&quot;hljs-keyword&quot;&gt;import&lt;/span&gt; string &lt;span class=&quot;hljs-keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;hljs-string&quot;&gt;&apos;string&apos;&lt;/span&gt;

&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;slugify&lt;/span&gt; = s =&amp;gt; &lt;span class=&quot;hljs-title function_&quot;&gt;string&lt;/span&gt;(s).&lt;span class=&quot;hljs-title function_&quot;&gt;slugify&lt;/span&gt;().&lt;span class=&quot;hljs-title function_&quot;&gt;toString&lt;/span&gt;()


&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; md = &lt;span class=&quot;hljs-title class_&quot;&gt;MarkdownIt&lt;/span&gt;({
    &lt;span class=&quot;hljs-attr&quot;&gt;html&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,
    &lt;span class=&quot;hljs-attr&quot;&gt;linkify&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,
    &lt;span class=&quot;hljs-attr&quot;&gt;typographer&lt;/span&gt;: &lt;span class=&quot;hljs-literal&quot;&gt;true&lt;/span&gt;,
    &lt;span class=&quot;hljs-title function_&quot;&gt;highlight&lt;/span&gt;(&lt;span class=&quot;hljs-params&quot;&gt;str, language&lt;/span&gt;) {
        &lt;span class=&quot;hljs-keyword&quot;&gt;if&lt;/span&gt; (language &amp;amp;&amp;amp; hljs.&lt;span class=&quot;hljs-title function_&quot;&gt;getLanguage&lt;/span&gt;(language)) {
            &lt;span class=&quot;hljs-keyword&quot;&gt;try&lt;/span&gt; {

                &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; hljs.&lt;span class=&quot;hljs-title function_&quot;&gt;highlight&lt;/span&gt;(str, { &lt;span class=&quot;hljs-attr&quot;&gt;language&lt;/span&gt;: language }).&lt;span class=&quot;hljs-property&quot;&gt;value&lt;/span&gt;;
            } &lt;span class=&quot;hljs-keyword&quot;&gt;catch&lt;/span&gt; (err) {
                &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(err)
            }
        }

        &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;hljs-literal&quot;&gt;null&lt;/span&gt;;
    }
}).&lt;span class=&quot;hljs-title function_&quot;&gt;use&lt;/span&gt;(markdownItAnchor, { slugify });


&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;readFile&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;filename&lt;/span&gt;) =&amp;gt; {
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; rawFile = fs.&lt;span class=&quot;hljs-title function_&quot;&gt;readFileSync&lt;/span&gt;(filename, &lt;span class=&quot;hljs-string&quot;&gt;&apos;utf8&apos;&lt;/span&gt;)
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; parsed = &lt;span class=&quot;hljs-title function_&quot;&gt;matter&lt;/span&gt;(rawFile)
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; html = md.&lt;span class=&quot;hljs-title function_&quot;&gt;render&lt;/span&gt;(parsed.&lt;span class=&quot;hljs-property&quot;&gt;content&lt;/span&gt;)

    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; {...parsed, html }
}

&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;templatize&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;template, { date, title, content, author }&lt;/span&gt;) =&amp;gt;
    template
    .&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/&amp;lt;!-- PUBLISH_DATE --&amp;gt;/g&lt;/span&gt;, date)
    .&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/&amp;lt;!-- TITLE --&amp;gt;/g&lt;/span&gt;, title)
    .&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/&amp;lt;!-- CONTENT --&amp;gt;/g&lt;/span&gt;, content)
    .&lt;span class=&quot;hljs-title function_&quot;&gt;replace&lt;/span&gt;(&lt;span class=&quot;hljs-regexp&quot;&gt;/&amp;lt;!-- AUTHOR --&amp;gt;/g&lt;/span&gt;, author)

&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;saveFile&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;filename, contents&lt;/span&gt;) =&amp;gt; {
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; dir = path.&lt;span class=&quot;hljs-title function_&quot;&gt;dirname&lt;/span&gt;(filename)
    mkdirp.&lt;span class=&quot;hljs-title function_&quot;&gt;sync&lt;/span&gt;(dir)
    fs.&lt;span class=&quot;hljs-title function_&quot;&gt;writeFileSync&lt;/span&gt;(filename, contents)
}

&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;getOutputFilename&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;filename, outPath&lt;/span&gt;) =&amp;gt; {
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; basename = path.&lt;span class=&quot;hljs-title function_&quot;&gt;basename&lt;/span&gt;(filename)
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; newfilename = basename.&lt;span class=&quot;hljs-title function_&quot;&gt;substring&lt;/span&gt;(&lt;span class=&quot;hljs-number&quot;&gt;0&lt;/span&gt;, basename.&lt;span class=&quot;hljs-property&quot;&gt;length&lt;/span&gt; - &lt;span class=&quot;hljs-number&quot;&gt;3&lt;/span&gt;) + &lt;span class=&quot;hljs-string&quot;&gt;&apos;.html&apos;&lt;/span&gt;
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; outfile = path.&lt;span class=&quot;hljs-title function_&quot;&gt;join&lt;/span&gt;(outPath, newfilename)
    &lt;span class=&quot;hljs-keyword&quot;&gt;return&lt;/span&gt; outfile
}

&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;processFile&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;filename, template, outPath&lt;/span&gt;) =&amp;gt; {
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; file = &lt;span class=&quot;hljs-title function_&quot;&gt;readFile&lt;/span&gt;(filename)
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; outfilename = &lt;span class=&quot;hljs-title function_&quot;&gt;getOutputFilename&lt;/span&gt;(filename, outPath)

    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; templatized = &lt;span class=&quot;hljs-title function_&quot;&gt;templatize&lt;/span&gt;(template, {
        &lt;span class=&quot;hljs-attr&quot;&gt;date&lt;/span&gt;: file.&lt;span class=&quot;hljs-property&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;date&lt;/span&gt;,
        &lt;span class=&quot;hljs-attr&quot;&gt;title&lt;/span&gt;: file.&lt;span class=&quot;hljs-property&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;title&lt;/span&gt;,
        &lt;span class=&quot;hljs-attr&quot;&gt;content&lt;/span&gt;: file.&lt;span class=&quot;hljs-property&quot;&gt;html&lt;/span&gt;,
        &lt;span class=&quot;hljs-attr&quot;&gt;author&lt;/span&gt;: file.&lt;span class=&quot;hljs-property&quot;&gt;data&lt;/span&gt;.&lt;span class=&quot;hljs-property&quot;&gt;author&lt;/span&gt;,
    })

    &lt;span class=&quot;hljs-title function_&quot;&gt;saveFile&lt;/span&gt;(outfilename, templatized)
    &lt;span class=&quot;hljs-variable language_&quot;&gt;console&lt;/span&gt;.&lt;span class=&quot;hljs-title function_&quot;&gt;log&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;`📝 &lt;span class=&quot;hljs-subst&quot;&gt;${outfilename}&lt;/span&gt;`&lt;/span&gt;)
}

&lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt; = (&lt;span class=&quot;hljs-params&quot;&gt;&lt;/span&gt;) =&amp;gt; {
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; srcPath = path.&lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;content&apos;&lt;/span&gt;)
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; outPath = path.&lt;span class=&quot;hljs-title function_&quot;&gt;resolve&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;public&apos;&lt;/span&gt;)
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; template = fs.&lt;span class=&quot;hljs-title function_&quot;&gt;readFileSync&lt;/span&gt;(&lt;span class=&quot;hljs-string&quot;&gt;&apos;./templates/initial/template.html&apos;&lt;/span&gt;, &lt;span class=&quot;hljs-string&quot;&gt;&apos;utf8&apos;&lt;/span&gt;)
    &lt;span class=&quot;hljs-keyword&quot;&gt;const&lt;/span&gt; filenames = glob.&lt;span class=&quot;hljs-title function_&quot;&gt;sync&lt;/span&gt;(srcPath + &lt;span class=&quot;hljs-string&quot;&gt;&apos;/**/*.md&apos;&lt;/span&gt;)

    filenames.&lt;span class=&quot;hljs-title function_&quot;&gt;forEach&lt;/span&gt;(&lt;span class=&quot;hljs-function&quot;&gt;(&lt;span class=&quot;hljs-params&quot;&gt;filename&lt;/span&gt;) =&amp;gt;&lt;/span&gt; {
        &lt;span class=&quot;hljs-title function_&quot;&gt;processFile&lt;/span&gt;(filename, template, outPath)
    })
}

&lt;span class=&quot;hljs-title function_&quot;&gt;main&lt;/span&gt;()

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;/p&gt;
            &lt;/div&gt;
        &lt;/div&gt;
        &lt;div id=&quot;content&quot;&gt;
            &lt;div class=&quot;foot&quot;&gt;
                &lt;div id=&quot;links&quot;&gt;
    
                    &lt;div class=&quot;icons&quot;&gt;
    
                        &lt;a aria-label=&quot;GitHub&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; id=&quot;github&quot; href=&quot;http://github.com/codebotx &quot; class=&quot;icon&quot;&gt;
                            &lt;i class=&quot;bi bi-github&quot;&gt;&lt;/i&gt;
                        &lt;/a&gt;
    
                        &lt;a aria-label=&quot;Instagram&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; id=&quot;instagram&quot; href=&quot;http://instagram.com/anubhavclicks&quot; class=&quot;icon&quot;&gt;
                            &lt;i class=&quot;bi bi-instagram &quot;&gt;&lt;/i&gt;
                        &lt;/a&gt;
    
                        &lt;a aria-label=&quot;Mail&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; id=&quot;mail&quot; href=&quot;mailto:anubhabr50@gmail.com &quot; class=&quot;icon&quot;&gt;
                            &lt;i class=&quot;bi bi-envelope-open-fill &quot;&gt;&lt;/i&gt;
                        &lt;/a&gt;
    
                        &lt;a aria-label=&quot;Linkedin&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; id=&quot;linkedin&quot; href=&quot;https://www.linkedin.com/in/anubhabpatnaik0530/ &quot; class=&quot;icon&quot;&gt;
                            &lt;i class=&quot;bi bi-linkedin &quot;&gt;&lt;/i&gt;
                        &lt;/a&gt;
    
                        &lt;a aria-label=&quot;Blog&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; id=&quot;personal-blog&quot; href=&quot;https://anubhavp.dev/blog &quot; class=&quot;icon&quot;&gt;
                            &lt;i class=&quot;bi bi-card-text &quot;&gt;&lt;/i&gt;
                        &lt;/a&gt;
    
                    &lt;/div&gt;
                &lt;/div&gt;
                &lt;div&gt;
                    ©Anubhab Patnaik. Find me here.
                &lt;/div&gt;
            &lt;/div&gt;
    
        &lt;/div&gt;



    &lt;/div&gt;


</content:encoded>
        </item>
    </channel>
</rss>